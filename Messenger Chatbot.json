{
  "nodes": [
    {
      "parameters": {
        "multipleMethods": true,
        "path": "fb-path-2345",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        464,
        1296
      ],
      "id": "2f5abd9f-c58b-4957-9191-52a0e6f522ae",
      "name": "Webhook",
      "webhookId": "a9fa6299-a5bc-463e-80da-bb14bcea7749"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.sender_id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1936,
        1728
      ],
      "id": "6139fd5b-9349-4d74-b006-c3c3cca8ab45",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "",
          "cachedResultName": "",
          "cachedResultUrl": ""
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        2832,
        1680
      ],
      "id": "9aae051f-ad77-4c59-980f-adf2efebc119",
      "name": "Apartment Details",
      "credentials": {}
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1088,
        1424
      ],
      "id": "bb1b8dfc-4de3-4c44-b3cd-a0528156f3a1",
      "name": "RTW"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query[\"hub.challenge\"] }}",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1088,
        1104
      ],
      "id": "bcc1b3fd-99e2-4b47-bd8d-a08f324ff6f1",
      "name": "RTW-1"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 404
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1088,
        1280
      ],
      "id": "02588452-9d44-4836-8467-045edca493d9",
      "name": "RTW-2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7a9975e1-dd73-4e17-9b1a-d9f8f2a14c3e",
              "name": "sender_id",
              "value": "={{$json[\"body\"][\"entry\"][0][\"messaging\"][0][\"sender\"][\"id\"]}}",
              "type": "string"
            },
            {
              "id": "4d510a41-15a5-4ab5-98fe-c8cc677d9329",
              "name": "receiver_id",
              "value": "={{$json[\"body\"][\"entry\"][0][\"messaging\"][0][\"recipient\"][\"id\"]}}",
              "type": "string"
            },
            {
              "id": "003cecb3-df9b-4edb-a152-c5e47257aeae",
              "name": "message",
              "value": "={{$json[\"body\"][\"entry\"][0][\"messaging\"][0][\"message\"][\"text\"]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1312,
        1424
      ],
      "id": "cc6d2d89-1412-4737-a457-01c6d31b3500",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Edit Fields').item.json.receiver_id }}\n/messages?access_token=TOKEN_HERE",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\": {\n    \"id\": \"{{ $('Edit Fields').item.json.sender_id }}\"\n  },\n  \"sender_action\": \"mark_seen\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1984,
        1344
      ],
      "id": "feaa970f-7cbd-426c-9a1d-86cf6818b410",
      "name": "HTTP MSG Seen"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Edit Fields').item.json.receiver_id }}\n/messages?access_token=TOKEN_HERE",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\": {\n    \"id\": \"{{ $('Edit Fields').item.json.sender_id }}\"\n  },\n  \"sender_action\": \"typing_on\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2224,
        1344
      ],
      "id": "6ead3532-f7af-4549-ad47-39511ce80ddf",
      "name": "HTTP MSG Typing On"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1456,
        1728
      ],
      "id": "731f0d10-0606-49c0-97af-52f830fea353",
      "name": "OpenAI 4.1 Nano",
      "credentials": {
        "openAiApi": {
          "id": "aqaAD0x9hDYeYtQu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {
          "frequencyPenalty": 0.2,
          "maxTokens": 400,
          "presencePenalty": 0.1,
          "temperature": 0.1,
          "maxRetries": 2,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2592,
        1696
      ],
      "id": "e152fe5c-6dfe-4a9a-9659-289bdc3e6e3b",
      "name": "OpenAI 4.1 Mini",
      "credentials": {
        "openAiApi": {
          "id": "aqaAD0x9hDYeYtQu",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields').item.json.message }}",
        "options": {
          "systemMessage": "=[YOUR SYSTEM PROMPT, CONVERTING INTO EITHER NORMAL CONVERSATION OR AI AGENT RELATED QUESTIONS]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1568,
        1424
      ],
      "id": "43fec2c3-8cbe-42fe-a34e-fffba3958bca",
      "name": "Classify"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b1f66b4-b84b-43c2-89f8-6836e73a1679",
              "leftValue": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "0aa9fe1f-c792-48f2-8281-835d43b113bf",
              "leftValue": "={{ $json.body.entry[0].messaging[0].sender.id }}",
              "rightValue": "31961984473388888",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "c37731ca-3acb-4e72-82f4-9f64628fd5b1",
              "leftValue": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "rightValue": "Would you like a site",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        848,
        1440
      ],
      "id": "1677eb75-3b97-4470-95d3-1abd218d69bc",
      "name": "POST --> IF"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2529e188-e3c3-4422-bff0-2311a2950360",
              "leftValue": "={{ $('Code1').item.json.category }}",
              "rightValue": "conversational",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2e0c41f5-d563-4ec0-bbe3-9141891b45c1",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1696,
        1200
      ],
      "id": "c3ea8488-17e3-4937-9cbb-e3331daf3b11",
      "name": "Conversation or Apartment"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Edit Fields').item.json.receiver_id }}\n/messages?access_token=TOKEN_HERE",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n{\nrecipient: {\nid: $('Edit Fields').item.json.sender_id\n},\nmessaging_type: \"RESPONSE\",\nmessage: {\ntext: $json[\"output\"]\n}\n}\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2848,
        1344
      ],
      "id": "37a641e0-3d25-4076-b01c-dcaca03df24f",
      "name": "Send Apartment MSG"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "",
          "cachedResultUrl": ""
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        2688,
        1232
      ],
      "id": "809fa486-b9c1-43f0-87d8-6dda97ed3a15",
      "name": "FAQ"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.entry[0].messaging[0].message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "51005525-c6d4-4e2a-bf29-9e0ffae36a79"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bd6602a1-7dd7-4a42-9741-5497a48a053f",
                    "leftValue": "={{ $json.body.entry[0].messaging[0].message.attachments[0].type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        656,
        1456
      ],
      "id": "78b06d6e-053f-4d17-bd02-a33d9fcdf6bc",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7a9975e1-dd73-4e17-9b1a-d9f8f2a14c3e",
              "name": "sender_id",
              "value": "={{$json[\"body\"][\"entry\"][0][\"messaging\"][0][\"sender\"][\"id\"]}}",
              "type": "string"
            },
            {
              "id": "4d510a41-15a5-4ab5-98fe-c8cc677d9329",
              "name": "receiver_id",
              "value": "={{$json[\"body\"][\"entry\"][0][\"messaging\"][0][\"recipient\"][\"id\"]}}",
              "type": "string"
            },
            {
              "id": "003cecb3-df9b-4edb-a152-c5e47257aeae",
              "name": "image",
              "value": "={{ $json.body.entry[0].messaging[0].message.attachments[0].payload.url }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        848,
        1616
      ],
      "id": "b31158a9-3799-42aa-839f-53724291dea9",
      "name": "Image Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01b2720e-383c-4b3b-9288-843966051275",
              "leftValue": "={{ $json.query[\"hub.mode\"] }}",
              "rightValue": "subscribe",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8f92c0f2-0b46-4f3a-88a8-fc7216eef8bb",
              "leftValue": "={{ $json.query[\"hub.verify_token\"] }}",
              "rightValue": "231",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        848,
        1200
      ],
      "id": "b74f0a93-b0cb-45a2-8042-ae38c7078897",
      "name": "GET --> IF"
    },
    {
      "parameters": {
        "jsCode": "// Get the string from the field \"output\"\nconst content = $json[\"output\"];\n\n// Parse JSON string to object\nconst parsed = JSON.parse(content);\n\n// Return parsed object so IF node can use it\nreturn [{ json: parsed }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1488,
        1200
      ],
      "id": "be683427-80c3-4f93-8190-ff580d8205df",
      "name": "Code1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Image Edit Fields').item.json.receiver_id }}\n/messages?access_token=TOKEN_HERE",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n{\nrecipient: {\nid: $('Image Edit Fields').item.json.sender_id\n},\nmessaging_type: \"RESPONSE\",\nmessage: {\ntext: \"My apologies sir, but it seems I'm unable to view the image you sent. Could you please tell me which project you are interested in?\"\n}\n}\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1088,
        1616
      ],
      "id": "30126ba8-022b-4d9a-b513-1b8a4d6bcb08",
      "name": "IMAGE doesn't support"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields').item.json.message }}",
        "options": {
          "systemMessage": "=[APARMTNET RELATED QUESTION]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2432,
        1344
      ],
      "id": "d40dbe77-39b3-43b5-a208-3a817a6bbc60",
      "name": "Apartment Agent"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "GET --> IF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Apartment Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Classify",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Apartment Details": {
      "ai_tool": [
        [
          {
            "node": "Apartment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RTW": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Classify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP MSG Seen": {
      "main": [
        [
          {
            "node": "HTTP MSG Typing On",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP MSG Typing On": {
      "main": [
        [
          {
            "node": "Apartment Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI 4.1 Nano": {
      "ai_languageModel": [
        [
          {
            "node": "Classify",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI 4.1 Mini": {
      "ai_languageModel": [
        [
          {
            "node": "Apartment Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Classify": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST --> IF": {
      "main": [
        [
          {
            "node": "RTW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation or Apartment": {
      "main": [
        [],
        [
          {
            "node": "HTTP MSG Seen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FAQ": {
      "ai_tool": [
        []
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "POST --> IF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Edit Fields": {
      "main": [
        [
          {
            "node": "IMAGE doesn't support",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET --> IF": {
      "main": [
        [
          {
            "node": "RTW-1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "RTW-2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Conversation or Apartment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apartment Agent": {
      "main": [
        [
          {
            "node": "Send Apartment MSG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e499de3352f70bb66eba0ac4ec4e8e7417a650048f1b64c241d4945978537bd4"
  }
}
